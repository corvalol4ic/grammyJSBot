// const ccxt = require('ccxt');
// const { Bot } = require('grammy');
// const { RSI, MACD } = require('technicalindicators');
// const winston = require('winston');

// // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
// const logger = winston.createLogger({
//     level: 'info',
//     format: winston.format.combine(
//         winston.format.timestamp(),
//         winston.format.printf(({ timestamp, level, message }) => {
//             return `${timestamp} [${level.toUpperCase()}]: ${message}`;
//         })
//     ),
//     transports: [
//         new winston.transports.Console(),
//         new winston.transports.File({ filename: 'bot.log' }),
//     ],
// });

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Telegram
// const bot = new Bot('YOUR_TELEGRAM_BOT_TOKEN');

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Bybit API
// const exchange = new ccxt.bybit({
//     apiKey: 'YOUR_BYBIT_API_KEY',
//     secret: 'YOUR_BYBIT_API_SECRET',
// });

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ—Ä–≥—É—é—â–∏—Ö—Å—è —Ñ—å—é—á–µ—Ä—Å–æ–≤
// async function getFuturesMarkets() {
//     try {
//         const markets = await exchange.fetchMarkets();
//         const futuresMarkets = markets.filter(market => market.future); // –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ—å—é—á–µ—Ä—Å—ã
//         logger.info(`–ü–æ–ª—É—á–µ–Ω–æ ${futuresMarkets.length} —Ñ—å—é—á–µ—Ä—Å–æ–≤`);
//         return futuresMarkets.map(market => market.symbol); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ—å—é—á–µ—Ä—Å–æ–≤: ${error.message}`);
//         return [];
//     }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ—á–µ–π —Å Bybit
// async function getCandles(symbol, timeframe, limit = 100) {
//     try {
//         const candles = await exchange.fetchOHLCV(symbol, timeframe, undefined, limit);
//         logger.info(`–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã —Å–≤–µ—á–∏ –¥–ª—è ${symbol} (${timeframe})`);
//         return candles;
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–µ—á–µ–π –¥–ª—è ${symbol} (${timeframe}): ${error.message}`);
//         return null;
//     }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ RSI
// function calculateRSI(closes, period = 14) {
//     try {
//         const rsi = RSI.calculate({ values: closes, period });
//         logger.info(`RSI —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –¥–ª—è ${closes.length} —Å–≤–µ—á–µ–π`);
//         return rsi;
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ RSI: ${error.message}`);
//         return null;
//     }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ MACD
// function calculateMACD(closes, fastPeriod = 12, slowPeriod = 26, signalPeriod = 9) {
//     try {
//         const macd = MACD.calculate({
//             values: closes,
//             fastPeriod,
//             slowPeriod,
//             signalPeriod,
//             SimpleMAOscillator: false,
//             SimpleMASignal: false,
//         });
//         logger.info(`MACD —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –¥–ª—è ${closes.length} —Å–≤–µ—á–µ–π`);
//         return macd;
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ MACD: ${error.message}`);
//         return null;
//     }
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ —Ç—Ä–µ–Ω–¥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º RSI –∏ MACD
// function detectTrendReversal(candles) {
//     if (candles.length < 30) {
//         logger.warn('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–∞');
//         return false;
//     }

//     const closes = candles.map(candle => candle[4]); // –¶–µ–Ω—ã –∑–∞–∫—Ä—ã—Ç–∏—è

//     // –†–∞—Å—á–µ—Ç RSI
//     const rsi = calculateRSI(closes);
//     if (!rsi || rsi.length === 0) return false;

//     const lastRsi = rsi[rsi.length - 1];

//     // –†–∞—Å—á–µ—Ç MACD
//     const macd = calculateMACD(closes);
//     if (!macd || macd.length === 0) return false;

//     const lastMacd = macd[macd.length - 1];

//     // –õ–æ–≥–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞
//     const isOverbought = lastRsi > 70; // RSI –≤—ã—à–µ 70 ‚Äî –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å
//     const isOversold = lastRsi < 30; // RSI –Ω–∏–∂–µ 30 ‚Äî –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å
//     const isBearishMACD = lastMacd.MACD < lastMacd.signal; // MACD –Ω–∏–∂–µ —Å–∏–≥–Ω–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏
//     const isBullishMACD = lastMacd.MACD > lastMacd.signal; // MACD –≤—ã—à–µ —Å–∏–≥–Ω–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–∏

//     // –í–æ–∑–º–æ–∂–Ω—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç –≤–Ω–∏–∑ (–º–µ–¥–≤–µ–∂–∏–π)
//     if (isOverbought && isBearishMACD) {
//         logger.info(`–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–µ–¥–≤–µ–∂–∏–π —Ä–∞–∑–≤–æ—Ä–æ—Ç –¥–ª—è ${candles.length} —Å–≤–µ—á–µ–π`);
//         return 'bearish';
//     }

//     // –í–æ–∑–º–æ–∂–Ω—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç –≤–≤–µ—Ä—Ö (–±—ã—á–∏–π)
//     if (isOversold && isBullishMACD) {
//         logger.info(`–û–±–Ω–∞—Ä—É–∂–µ–Ω –±—ã—á–∏–π —Ä–∞–∑–≤–æ—Ä–æ—Ç –¥–ª—è ${candles.length} —Å–≤–µ—á–µ–π`);
//         return 'bullish';
//     }

//     return false;
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç—Ä–µ–Ω–¥–æ–≤
// async function monitorTrends(symbol, timeframe, chatId) {
//     try {
//         const candles = await getCandles(symbol, timeframe);
//         if (!candles) return;

//         const reversalSignal = detectTrendReversal(candles);
//         if (reversalSignal) {
//             const message = `–í–æ–∑–º–æ–∂–Ω—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç —Ç—Ä–µ–Ω–¥–∞ –Ω–∞ ${symbol} (${timeframe}): ${reversalSignal === 'bullish' ? 'üìà –ë—ã—á–∏–π' : 'üìâ –ú–µ–¥–≤–µ–∂–∏–π'}`;
//             await bot.api.sendMessage(chatId, message);
//             logger.info(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: ${message}`);
//         }
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ monitorTrends: ${error.message}`);
//     }
// }

// // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
// bot.command('start', async (ctx) => {
//     const chatId = ctx.chat.id;
//     const timeframes = ['1m', '5m', '15m', '1h']; // –¢–∞–π–º—Ñ—Ä–µ–π–º—ã

//     try {
//         // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ—å—é—á–µ—Ä—Å–æ–≤
//         const futuresMarkets = await getFuturesMarkets();
//         if (futuresMarkets.length === 0) {
//             await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ—å—é—á–µ—Ä—Å–æ–≤.');
//             return;
//         }

//         await ctx.reply(`–ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ñ—å—é—á–µ—Ä—Å–æ–≤: ${futuresMarkets.join(', ')} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö: ${timeframes.join(', ')}`);
//         logger.info(`–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –¥–ª—è —Ñ—å—é—á–µ—Ä—Å–æ–≤: ${futuresMarkets.join(', ')} –Ω–∞ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞—Ö: ${timeframes.join(', ')}`);

//         // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
//         setInterval(async () => {
//             for (const symbol of futuresMarkets) {
//                 for (const timeframe of timeframes) {
//                     await monitorTrends(symbol, timeframe, chatId);
//                 }
//             }
//         }, 10000);
//     } catch (error) {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${error.message}`);
//         await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.');
//     }
// });

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
// bot.catch((err) => {
//     logger.error(`–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ Telegram: ${err.message}`);
// });

// // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
// bot.start()
//     .then(() => {
//         logger.info('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
//     })
//     .catch((error) => {
//         logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: ${error.message}`);
//     });